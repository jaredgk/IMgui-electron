{
  "name": "electron-osx-sign",
  "version": "0.3.1",
  "description": "Code-signing for Electron-packed OS X apps.",
  "main": "index.js",
  "bin": {
    "electron-osx-flat": "bin/electron-osx-flat.js",
    "electron-osx-sign": "bin/electron-osx-sign.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/electron-userland/electron-osx-sign.git"
  },
  "author": {
    "name": "sethlu"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/electron-userland/electron-osx-sign/issues"
  },
  "homepage": "https://github.com/electron-userland/electron-osx-sign",
  "dependencies": {
    "debug": "^2.2.0",
    "minimist": "^1.1.1",
    "run-series": "^1.1.1"
  },
  "devDependencies": {
    "compare-version": "^0.1.2",
    "electron-download": "^1.0.0",
    "extract-zip": "^1.0.3",
    "run-waterfall": "^1.1.1",
    "standard": "^3.3.2",
    "tape": "^4.0.0",
    "mkdirp": "^0.5.0",
    "rimraf": "^2.3.2"
  },
  "scripts": {
    "code-standard": "standard",
    "pretest": "rimraf test/work",
    "test": "standard && tape test"
  },
  "standard": {
    "ignore": [
      "test/work"
    ]
  },
  "readme": "# electron-osx-sign [![npm][npm_img]][npm_url] [![Build Status][travis_img]][travis_url]\n\n\nCode-signing for packaged Electron OS X apps.\n\nPlease visit our [Wiki](https://github.com/electron-userland/electron-osx-sign/wiki) hosted here on GitHub for walk-throughs and notes from past projects shipped with [electron-packager] and `electron-osx-sign`.\n\n*Note: The signing procedure implemented in this package is based on what described in [Mac App Store Submission Guide](https://github.com/atom/electron/blob/master/docs/tutorial/mac-app-store-submission-guide.md).*\n\n### An [OPEN Open Source Project](http://openopensource.org/)\n\nIndividuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.\n\n## Installation\n\n```sh\n# For use in npm scripts\nnpm install electron-osx-sign --save\n```\n\n```sh\n# For use from CLI\nnpm install electron-osx-sign -g\n```\n\n*Note: `electron-osx-sign` is a dependency of `electron-packager` as of 6.0.0 for signing apps on OS X. However, please install this package globally for more customization beyond specifying identity and entitlements.*\n\n## Usage\n\n### electron-osx-sign\n\n#### From the Command Line\n\n```sh\nelectron-osx-sign <app> [additional-binaries...] [--options...]\n```\n\nExample:\n\n```sh\nelectron-osx-sign path/to/my.app\n```\n\nFor details on the optional flags, run `electron-osx-sign --help` or see [electron-osx-sign-usage.txt](https://github.com/electron-userland/electron-osx-sign/blob/master/bin/electron-osx-sign-usage.txt).\n\n#### From the API\n\n```javascript\nvar sign = require('electron-osx-sign')\nsign(opts[, function done (err) {}])\n```\n\nExample:\n\n##### sign(opts, callback)\n\n```javascript\nvar sign = require('electron-osx-sign')\nsign({\n  app: 'path/to/my.app'\n}, function done (err) {\n  if (err) {\n    // Handle the error\n    return;\n  }\n  // Regular callback\n})\n```\n\n###### opts\n\n**Required**\n\n`app` - *String*\n\nPath to the application package.\nNeeds file extension `.app`.\n\n**Optional**\n\n`binaries` - *Array*\n\nPath to additional binaries that will be signed along with built-ins of Electron.\nDefault to `null`.\n\n`entitlements` - *String*\n\nPath to entitlements file for signing the app.\nSee [default.mas.entitlements](https://github.com/electron-userland/electron-osx-sign/blob/master/default.mas.entitlements) or [default.darwin.entitlements](https://github.com/electron-userland/electron-osx-sign/blob/master/default.darwin.entitlements) for default.\n\n`entitlements-inherit` - *String*\n\nPath to child entitlements which inherit the security settings for signing frameworks and bundles of a distribution. *This option only applies when signing with `entitlements` provided, or for a `mas` platform version.*\nSee [default.mas.inherit.entitlements](https://github.com/electron-userland/electron-osx-sign/blob/master/default.mas.inherit.entitlements) or [default.darwin.inherit.entitlements](https://github.com/electron-userland/electron-osx-sign/blob/master/default.darwin.inherit.entitlements) for default.\n\n`identity` - *String*\n\nName of certificate to use when signing.\nDefault to retrieve from `opts.keychain` (see below) or system default keychain.\n\nSigning platform `mas` will look for `3rd Party Mac Developer Application: * (*)`, and platform `darwin` will look for `Developer ID Application: * (*)` by default.\n\n`keychain` - *String*\n\nThe keychain name.\nDefault to system default keychain (`login.keychain`).\n\n`ignore` - *String*\n\nRegex or function that signals ignoring a file before signing.\nDefault to undefined.\n\n`platform` - *String*\n\nBuild platform of Electron.\nAllowed values: `darwin`, `mas`.\nDefault to auto detect from presence of `Squirrel.framework` within the application package.\n\n###### callback\n\n`err` - *Error*\n\n### electron-osx-flat\n\n#### From the Command Line\n\n```sh\nelectron-osx-flat <app> [--options...]\n```\n\nExample:\n\n```sh\nelectron-osx-flat path/to/my.app\n```\n\nFor details on the optional flags, run `electron-osx-flat --help` or see [electron-osx-flat-usage.txt](https://github.com/electron-userland/electron-osx-sign/blob/master/bin/electron-osx-flat-usage.txt).\n\n#### From the API\n\n##### flat(opts, callback)\n\n```javascript\nvar flat = require('electron-osx-sign').flat\nflat(opts[, function done (err) {}])\n```\n\nExample:\n\n```javascript\nvar flat = require('electron-osx-sign').flat\nflat({\n  app: 'path/to/my.app'\n}, function done (err) {\n  if (err) {\n    // Handle the error\n    return;\n  }\n  // Regular callback\n})\n```\n\n###### opts\n\n**Required**\n\n`app` - *String*\n\nPath to the application package.\nNeeds file extension `.app`.\n\n**Optional**\n\n`identity` - *String*\n\nName of certificate to use when flattening.\nDefault to retrieve from `opts.keychain`(see below) or system default keychain.\n\nFlattening platform `mas` will look for `3rd Party Mac Developer Installer: * (*)`, and platform `darwin` will look for `Developer ID Installer: * (*)` by default.\n\n`install` - *String*\n\nPath to install for the bundle.\nDefault to `/Applications`.\n\n`keychain` - *String*\n\nThe keychain name.\nDefault to `login.keychain`.\n\n`platform` - *String*\n\nBuild platform of Electron. Allowed values: `darwin`, `mas`.\nDefault to auto detect from application.\n\n`pkg` - *String*\n\nPath to the output flattened package.\nNeeds file extension `.pkg`.\n\n###### callback\n\n`err` - *Error*\n\n## Debug\n\nAs of release v0.3.1, external module `debug` is used to display logs and messages; remember to `export DEBUG=electron-osx-sign*` when necessary.\n\n## Test\n\nAs developer certificates are required for `codesign` in OS X, this module may not be tested via online build services. If you wish to test out this module, enter:\n\n```\nnpm test\n```\n\nfrom the dev directory, and tell us if all tests should pass.\n\nWhen this command is fun for the first time: `electron-download` will download all major releases of Electron available for OS X from 0.24.0, and save to `~/.electron/`, which might take up less than 1GB of disk space.\n\nA successful testing should look something like:\n\n```\n$ npm test\n\n> electron-osx-sign@0.3.1 pretest electron-osx-sign\n> rimraf test/work\n\n> electron-osx-sign@0.3.1 test electron-osx-sign\n> standard && tape test\n\nCalling electron-download before running tests...\nRunning tests...\nTAP version 13\n# setup\n# defaults-test:v0.24.0-darwin-x64\nok 1 app signed\nok 2 app flattened\n# defaults-test:v0.25.0-darwin-x64\nok 3 app signed\nok 4 app flattened\n# defaults-test:v0.26.0-darwin-x64\nok 5 app signed\nok 6 app flattened\n# defaults-test:v0.27.0-darwin-x64\nok 7 app signed\nok 8 app flattened\n# defaults-test:v0.28.0-darwin-x64\nok 9 app signed\nok 10 app flattened\n# defaults-test:v0.29.0-darwin-x64\nok 11 app signed\nok 12 app flattened\n# defaults-test:v0.30.0-darwin-x64\nok 13 app signed\nok 14 app flattened\n# defaults-test:v0.31.0-darwin-x64\nok 15 app signed\nok 16 app flattened\n# defaults-test:v0.32.0-darwin-x64\nok 17 app signed\nok 18 app flattened\n# defaults-test:v0.33.0-darwin-x64\nok 19 app signed\nok 20 app flattened\n# defaults-test:v0.34.0-darwin-x64\nok 21 app signed\nok 22 app flattened\n# defaults-test:v0.34.0-mas-x64\nok 23 app signed\nok 24 app flattened\n# defaults-test:v0.35.0-darwin-x64\nok 25 app signed\nok 26 app flattened\n# defaults-test:v0.35.0-mas-x64\nok 27 app signed\nok 28 app flattened\n# defaults-test:v0.36.0-darwin-x64\nok 29 app signed\nok 30 app flattened\n# defaults-test:v0.36.0-mas-x64\nok 31 app signed\nok 32 app flattened\n# teardown\n\n1..32\n# tests 32\n# pass  32\n\n# ok\n```\n\n## Collaborators\n\nThanks to [seanchas116](https://github.com/seanchas116), and [jasonhinkle](https://github.com/jasonhinkle) for improving the usability of this project implementation.\n\n## Related\n\n- [electron-packager] - package your electron app in OS executables (.app, .exe, etc) via JS or CLI\n\n[npm_img]: https://img.shields.io/npm/v/electron-osx-sign.svg\n[npm_url]: https://npmjs.org/package/electron-osx-sign\n[travis_img]: https://travis-ci.org/electron-userland/electron-osx-sign.svg?branch=master\n[travis_url]: https://travis-ci.org/electron-userland/electron-osx-sign\n[electron-packager]: https://github.com/electron-userland/electron-packager\n",
  "readmeFilename": "README.md",
  "_id": "electron-osx-sign@0.3.1",
  "_from": "electron-osx-sign@^0.3.0"
}
